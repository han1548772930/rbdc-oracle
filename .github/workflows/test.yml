name: Tests

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

env:
  CARGO_TERM_COLOR: always

jobs:
  # 单元测试作业（不需要数据库）
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Run unit tests
      run: cargo test test_exchange --verbose

    - name: Run clippy
      run: cargo clippy -- -D warnings

    - name: Check formatting
      run: cargo fmt -- --check

    - name: Check documentation
      run: cargo doc --no-deps --document-private-items

  # 集成测试作业（需要 Oracle 数据库）
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    
    services:
      oracle:
        image: gvenzl/oracle-xe:21-slim
        env:
          ORACLE_PASSWORD: oracle
          APP_USER: testuser
          APP_USER_PASSWORD: testpass
        ports:
          - 1521:1521
        options: >-
          --health-cmd healthcheck.sh
          --health-interval 20s
          --health-timeout 10s
          --health-retries 10

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Install Oracle Instant Client
      run: |
        # 下载 Oracle Instant Client
        wget -q https://download.oracle.com/otn_software/linux/instantclient/2112000/instantclient-basic-linux.x64-21.12.0.0.0dbru.zip
        wget -q https://download.oracle.com/otn_software/linux/instantclient/2112000/instantclient-devel-linux.x64-21.12.0.0.0dbru.zip
        
        # 解压并安装
        unzip -q instantclient-basic-linux.x64-21.12.0.0.0dbru.zip
        unzip -q instantclient-devel-linux.x64-21.12.0.0.0dbru.zip
        sudo mv instantclient_21_12 /opt/oracle
        
        # 配置环境
        echo "/opt/oracle" | sudo tee /etc/ld.so.conf.d/oracle.conf
        sudo ldconfig
        
        # 设置环境变量
        echo "LD_LIBRARY_PATH=/opt/oracle" >> $GITHUB_ENV
        echo "ORACLE_HOME=/opt/oracle" >> $GITHUB_ENV

    - name: Wait for Oracle to be ready
      run: |
        echo "Waiting for Oracle database to start..."
        timeout=300
        elapsed=0
        
        while [ $elapsed -lt $timeout ]; do
          if nc -z localhost 1521; then
            echo "Oracle port is open, waiting a bit more for full startup..."
            sleep 30
            echo "Oracle should be ready now!"
            break
          fi
          echo "Waiting for Oracle... ($elapsed/$timeout seconds)"
          sleep 10
          elapsed=$((elapsed + 10))
        done
        
        if [ $elapsed -ge $timeout ]; then
          echo "Timeout waiting for Oracle to start"
          exit 1
        fi

    - name: Run integration tests
      run: cargo test --features integration-tests --verbose
      env:
        ORACLE_CONNECTION_STRING: //localhost:1521/XE
        ORACLE_USERNAME: testuser
        ORACLE_PASSWORD: testpass

  # 多平台构建测试
  build-test:
    name: Build Test
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ matrix.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    # Windows 特殊处理
    - name: Install Oracle Instant Client (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        # 下载 Windows 版本的 Oracle Instant Client
        curl -L -o instantclient-basic-windows.zip "https://download.oracle.com/otn_software/nt/instantclient/2112000/instantclient-basic-windows.x64-21.12.0.0.0dbru.zip"
        Expand-Archive -Path instantclient-basic-windows.zip -DestinationPath C:\oracle
        echo "C:\oracle\instantclient_21_12" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    # macOS 特殊处理
    - name: Install Oracle Instant Client (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        # 对于 macOS，我们只测试编译
        echo "macOS build test only (no Oracle client)"

    # Linux 特殊处理
    - name: Install Oracle Instant Client (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        wget -q https://download.oracle.com/otn_software/linux/instantclient/2112000/instantclient-basic-linux.x64-21.12.0.0.0dbru.zip
        unzip -q instantclient-basic-linux.x64-21.12.0.0.0dbru.zip
        sudo mv instantclient_21_12 /opt/oracle
        echo "/opt/oracle" | sudo tee /etc/ld.so.conf.d/oracle.conf
        sudo ldconfig
        echo "LD_LIBRARY_PATH=/opt/oracle" >> $GITHUB_ENV

    - name: Build project
      run: cargo build --verbose

    - name: Run unit tests only
      run: cargo test test_exchange --verbose